{"ast":null,"code":"var _jsxFileName = \"/Users/prathikhegde/Documents/project website/Weather_Forecast/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SearchBox from './components/SearchBox';\nimport LocationBox from './components/LocationBox';\nimport WeatherBox from './components/WeatherBox';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [chartData, setChartData] = useState({});\n  const apiKey = process.env.REACT_APP_API_KEY;\n  const getWeatherData = async query => {\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&appid=${apiKey}`);\n    const data = await response.json();\n    setWeather(data);\n  };\n  const getWeatherChartData = async query => {\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${query}&units=metric&appid=${apiKey}`);\n    const data = await response.json();\n    const tempChartData = {\n      labels: data.list.map(item => item.dt_txt),\n      datasets: [{\n        label: 'Temperature',\n        data: data.list.map(item => item.main.temp),\n        fill: false,\n        borderColor: 'rgba(255, 255, 255, 0.8)',\n        borderWidth: 2\n      }]\n    };\n    setChartData(tempChartData);\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    getWeatherData(query);\n    getWeatherChartData(query);\n    setQuery('');\n  };\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      getWeatherData(`${position.coords.latitude},${position.coords.longitude}`);\n      getWeatherChartData(`${position.coords.latitude},${position.coords.longitude}`);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n        query: query,\n        setQuery: setQuery,\n        handleSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), typeof weather.main !== 'undefined' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(LocationBox, {\n          name: weather.name,\n          country: weather.sys.country,\n          date: new Date().toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WeatherBox, {\n          temp: Math.round(weather.main.temp),\n          feelsLike: Math.round(weather.main.feels_like),\n          weather: weather.weather[0].main,\n          description: weather.weather[0].description,\n          icon: weather.weather[0].icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: chartData,\n            options: {\n              maintainAspectRatio: false\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: \"Location not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bp3P6tI/LQgGJiZChoT9bPcGGjc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SearchBox","LocationBox","WeatherBox","Line","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","query","setQuery","weather","setWeather","chartData","setChartData","apiKey","process","env","REACT_APP_API_KEY","getWeatherData","response","fetch","data","json","getWeatherChartData","tempChartData","labels","list","map","item","dt_txt","datasets","label","main","temp","fill","borderColor","borderWidth","handleSearch","e","preventDefault","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","country","sys","date","Date","toLocaleDateString","Math","round","feelsLike","feels_like","description","icon","options","maintainAspectRatio","_c","$RefreshReg$"],"sources":["/Users/prathikhegde/Documents/project website/Weather_Forecast/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SearchBox from './components/SearchBox';\nimport LocationBox from './components/LocationBox';\nimport WeatherBox from './components/WeatherBox';\nimport { Line } from 'react-chartjs-2';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [chartData, setChartData] = useState({});\n  const apiKey = process.env.REACT_APP_API_KEY;\n\n  const getWeatherData = async (query) => {\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&appid=${apiKey}`\n    );\n    const data = await response.json();\n    setWeather(data);\n  };\n\n  const getWeatherChartData = async (query) => {\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/forecast?q=${query}&units=metric&appid=${apiKey}`\n    );\n    const data = await response.json();\n    const tempChartData = {\n      labels: data.list.map((item) => item.dt_txt),\n      datasets: [\n        {\n          label: 'Temperature',\n          data: data.list.map((item) => item.main.temp),\n          fill: false,\n          borderColor: 'rgba(255, 255, 255, 0.8)',\n          borderWidth: 2,\n        },\n      ],\n    };\n    setChartData(tempChartData);\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    getWeatherData(query);\n    getWeatherChartData(query);\n    setQuery('');\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      getWeatherData(\n        `${position.coords.latitude},${position.coords.longitude}`\n      );\n      getWeatherChartData(`${position.coords.latitude},${position.coords.longitude}`);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"app-container\">\n        <SearchBox query={query} setQuery={setQuery} handleSearch={handleSearch} />\n        {typeof weather.main !== 'undefined' ? (\n          <>\n            <LocationBox\n              name={weather.name}\n              country={weather.sys.country}\n              date={new Date().toLocaleDateString()}\n            />\n            <WeatherBox\n              temp={Math.round(weather.main.temp)}\n              feelsLike={Math.round(weather.main.feels_like)}\n              weather={weather.weather[0].main}\n              description={weather.weather[0].description}\n              icon={weather.weather[0].icon}\n            />\n            <div className=\"chart-container\">\n              <Line data={chartData} options={{ maintainAspectRatio: false }} />\n            </div>\n          </>\n        ) : (\n          <p className=\"error-message\">Location not found</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}