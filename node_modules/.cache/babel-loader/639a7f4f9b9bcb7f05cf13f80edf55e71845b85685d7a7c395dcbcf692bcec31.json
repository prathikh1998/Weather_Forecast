{"ast":null,"code":"var _jsxFileName = \"/Users/prathikhegde/Documents/project website/Weather_Forecast/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"dc5e91de9b08d11ada11c13da80edcef\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [temperatureData, setTemperatureData] = useState({});\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setQuery('');\n        console.log(result);\n        fetch(`${api.base}forecast?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n          const labels = result.list.map(item => item.dt_txt.slice(11, 16));\n          const data = result.list.map(item => item.main.temp);\n          setTemperatureData({\n            labels,\n            datasets: [{\n              label: 'Temperature (°C)',\n              data\n            }]\n          });\n        }).catch(error => console.log(error.message));\n      }).catch(error => {\n        console.log(error.message);\n      });\n    }\n  };\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Search...\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          onKeyPress: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), typeof weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: [weather.name, \", \", weather.sys.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: dateBuilder(new Date())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            children: [Math.round(weather.main.temp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: weather.weather[0].main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), temperatureData.labels && temperatureData.datasets && /*#__PURE__*/_jsxDEV(Line, {\n            data: temperatureData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 68\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8g+ISVwmRhOZ+yhGj4s8x/Z1994=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Line","jsxDEV","_jsxDEV","api","key","base","App","_s","query","setQuery","weather","setWeather","temperatureData","setTemperatureData","search","evt","fetch","then","res","json","result","console","log","labels","list","map","item","dt_txt","slice","data","main","temp","datasets","label","catch","error","message","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","className","children","type","placeholder","value","onChange","e","target","onKeyPress","fileName","_jsxFileName","lineNumber","columnNumber","name","sys","country","Date","Math","round","_c","$RefreshReg$"],"sources":["/Users/prathikhegde/Documents/project website/Weather_Forecast/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst api = {\n  key: \"dc5e91de9b08d11ada11c13da80edcef\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [temperatureData, setTemperatureData] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n          fetch(`${api.base}forecast?q=${query}&units=metric&APPID=${api.key}`)\n            .then(res => res.json())\n            .then(result => {\n              const labels = result.list.map(item => item.dt_txt.slice(11, 16));\n              const data = result.list.map(item => item.main.temp);\n              setTemperatureData({ labels, datasets: [{ label: 'Temperature (°C)', data }] });\n            })\n            .catch(error => console.log(error.message));\n        })\n        .catch(error => {\n          console.log(error.message);\n        });\n    }\n  }\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\n                  \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`;\n  }\n\n  return (\n    <div className=\"app\">\n      <main>\n        <div className=\"search-box\">\n          <input type=\"text\" className=\"search-bar\" placeholder=\"Search...\" value={query} onChange={e => setQuery(e.target.value)} onKeyPress={search} />\n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n        <div>\n          <div className=\"location-box\">\n            <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n            <div className=\"date\">{dateBuilder(new Date())}</div>\n          </div>\n          <div className=\"weather-box\">\n            <div className=\"temp\">{Math.round(weather.main.temp)}°C</div>\n            <div className=\"weather\">{weather.weather[0].main}</div>\n            {temperatureData.labels && temperatureData.datasets && <Line data={temperatureData} />}\n          </div>\n        </div>\n        ) : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}